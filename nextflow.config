/*
* MIT License
*
* Copyright (c) 2017 Tobias Neumann
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*/

manifest {
    homePage = 'https://github.com/t-neumann/nextflow-ngs'
    description = 'Nextflow pipelines for various generic NGS applications'
    mainScript = 'dummy.nf'
}

params {

	python     = 'python/2.7.3'
	fastqc     = 'fastqc/0.11.5'
	trimgalore = 'trimgalore/0.3.7'
	bedtools   = 'bedtools/2.26.0'
	samtools   = 'samtools/1.3.1'
	ucsc_kent  = 'kent-ucsc/2.79'
	sra_tk     = 'sra-toolkit/2.3.2-4'
	output 	   = "results/"
}

process {
	publishDir = [path: {params.output}, mode: 'copy', overwrite: 'true']
}

profiles {

    standard {
        process.executor = 'local'
        //process.scratch = true
    }

    cluster_sge {
    	//process.scratch = true
        process.executor = 'sge'
        process.penv = 'smp'
        process.cpus = 20
        process.queue = 'public.q'
        process.memory = '10GB'
    }

    cloud {
        process.executor = 'cirrus'
        process.container = 'cbcrg/imagex'
        docker.enabled = true
    }

}